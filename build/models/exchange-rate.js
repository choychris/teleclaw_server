"use strict";var _beforeSave=require("../utils/beforeSave.js"),_createLogging=require("../utils/createLogging.js");module.exports=function(r){var n=require("../server");(0,_createLogging.loggingModel)(r),(0,_beforeSave.updateTimeStamp)(r),(0,_beforeSave.assignKey)(r),r.observe("before save",function(n,e){if(n.isNewInstance||n.instance){var a=n.instance,t=a.coins,o=a.bonus,i=a.currency;Object.keys(i).map(function(e){var a,r;n.instance.realValuePerCoin[e]=(a=i[e],r=t+o,Math.round(a/r*1e3)/1e3)}),r.findOne({where:{status:!0},order:"realValuePerCoin.hkd ASC"},function(e,a){null!==a&&(n.hookState.lowestRate=a.realValuePerCoin.hkd)}),e()}else e()}),r.observe("after save",function(e,a){r.findOne({where:{status:!0},order:"realValuePerCoin.hkd ASC"}).then(function(u){null!==u?(u.realValuePerCoin.hkd!==e.hookState.lowestRate&&n.models.Benchmark.find({},function(e,a){a.map(function(e){var a=e.costRange,r=e.overheadCost,n=e.marginRate,t=e.gamePlayRate,o=(a.min+a.max)/2*n*r,i=t*u.realValuePerCoin.hkd;e.updateAttributes({productRate:Math.round(o/i)||0})})}),a()):a()}).catch(function(e){loggingFunction("Exchange Rate | "," update all benchmark Error | ",e,"error"),a(e)})})};