stages:
  - build
  - test
  - deploy

buildProduction:
  stage: build
  image: node:6.11.5
  only:
    - tags
    - master
    - production
  script: 
    - npm install
    - npm install -g gulp
    - gulp clean
    - gulp transpile
    - gulp compress
    - gulp stripdebug
  artifacts:
      paths:
        - node_modules/
        - package.json
        - build/
        - .ebextensions/
        
test:
  stage: test
  image: node:6.11.5
  services:
    - mongo:3.4
  dependencies:
    - buildProduction
  only:
    - tags
    - master
    - production
  script: 
    - NODE_ENV=staging npm run unit_test
    - npm prune --production
  artifacts:
    paths:
      - node_modules/
      - package.json
      - build/
      - .ebextensions/

testProduction:
  stage: test
  image: node:6.11.5
  services:
    - mongo:3.4
  environment:
    name: production
  dependencies:
    - buildProduction
  only:
    - tags
    - master
    - production
  script: 
    - npm install -g mocha
    - NODE_ENV=production npm run unit_test
    - npm prune --production
  artifacts:
    paths:
      - node_modules/
      - package.json
      - build/
      - .ebextensions/

deployDevelopment:
  stage: deploy
  variables: 
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_S3_BUCKET: $AWS_S3_STAGING_BUCKET
    AWS_DEFAULT_REGION: ap-southeast-1
  image: python:latest
  environment:
    name: development
  dependencies:
    - test
  when: manual
  only:
    - master
    - production
  except:
    - master
    - production
  script:
    - echo $GITLAB_USER_EMAIL
    - echo $GITLAB_USER_LOGIN
    - echo $GITLAB_USER_NAME

deployStaging:
  stage: deploy
  variables: 
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_S3_BUCKET: $AWS_S3_STAGING_BUCKET
    AWS_DEFAULT_REGION: ap-southeast-1
  image: python:latest
  environment:
    name: staging
    url: http://teleclawbackendapi-staging.ap-southeast-1.elasticbeanstalk.com/  
  dependencies:
    - test
  when: manual
  only:
    - master
  script:
    # Define Dynamic Variables
    - TIMESTAMP=$(date +%s)
    - FILE_NAME="teleclaw_backend_api_($TIMESTAMP)"
    - ZIP_FILE_NAME="$FILE_NAME.zip"
    # Install and Execute Zip Tools
    - apt-get update
    - apt-get install -y zip
    - zip -r $ZIP_FILE_NAME package.json build/ .ebextensions/
    # Install and Execute AWS CLI
    - pip install awscli
    - aws s3 cp $ZIP_FILE_NAME s3://$AWS_S3_BUCKET
    # Deploy Build to AWS Elastic BeanStalk
    - aws elasticbeanstalk create-application-version --application-name teleclaw_backend_api --version-label $FILE_NAME --source-bundle S3Bucket=$AWS_S3_BUCKET,S3Key=$ZIP_FILE_NAME --auto-create-application
    - aws elasticbeanstalk update-environment --application-name teleclaw_backend_api --environment-name teleclawBackendApi-staging --version-label $FILE_NAME

deployProduction:
  stage: deploy
  variables: 
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_S3_BUCKET: $AWS_S3_PRODUCTION_BUCKET
    AWS_DEFAULT_REGION: ap-southeast-1
  image: python:latest
  environment:
    name: production
    url: http://teleclawbackendapi-production.ap-southeast-1.elasticbeanstalk.com/
  dependencies:
    - testProduction
  when: manual
  only:
    - tags
    - production
  script:
    # Define Dynamic Variables
    - TIMESTAMP=$(date +%s)
    - FILE_NAME="teleclaw_backend_api_($TIMESTAMP)_($CI_COMMIT_TAG)"
    - ZIP_FILE_NAME="$FILE_NAME.zip"
    # Install and Execute Zip Tools
    - apt-get update
    - apt-get install -y zip
    - zip -r $ZIP_FILE_NAME package.json build/ .ebextensions/
    # Install and Execute AWS CLI
    - pip install awscli
    - aws s3 cp $ZIP_FILE_NAME s3://$AWS_S3_BUCKET
    # Deploy Build to AWS Elastic BeanStalk
    - aws elasticbeanstalk create-application-version --application-name teleclaw_backend_api --version-label $FILE_NAME --source-bundle S3Bucket=$AWS_S3_BUCKET,S3Key=$ZIP_FILE_NAME --auto-create-application
    - aws elasticbeanstalk update-environment --application-name teleclaw_backend_api --environment-name teleclawBackendApi-production --version-label $FILE_NAME
